---
import { getCollection, type CollectionEntry } from 'astro:content'
import type { GetStaticPaths } from 'astro'
import { getTableOfContents } from '@content/lib/toc'
import BaseLayout from '@content/layouts/base.astro'
import { MdxComponents } from '@content/components/content/mdx-components'
import DocsSidebar from '@content/components/content/docs-sidebar.astro'
import Header from '@content/components/navigation/header.astro'
import { SEO } from 'astro-seo'
import Footer from '@content/components/navigation/footer.astro'
import { ScrollArea } from '@web/components/ui/scroll-area'
import { TableOfContents } from '@content/components/content/toc'
import DocsPager from '@content/components/content/docs-pager.astro'
import { getTwitterHandler } from '@content/lib/twitter'
import { env } from '@web/lib/env'

export const getStaticPaths = (async () => {
  const DEFAULT_DOC_SLUG = 'getting-started' satisfies CollectionEntry<'docs'>['slug']

  const docs = await getCollection('docs')
  return docs.map((doc) => {
    return {
      params: { slug: doc.slug === DEFAULT_DOC_SLUG ? undefined : doc.slug },
      props: doc,
    }
  })
}) satisfies GetStaticPaths

type Props = CollectionEntry<'docs'>
const doc = Astro.props
const toc = await getTableOfContents(doc.body)

const { Content } = await doc.render()
---

<BaseLayout>
  <SEO
    slot="seo"
    title={`${doc.data.title} | ${env.APP_NAME}`}
    description={doc.data.description}
    openGraph={{
      basic: {
        title: `${doc.data.title} | ${env.APP_NAME}`,
        type: 'website',
        image: '/opengraph-image.jpg',
      },
    }}
    twitter={{
      creator: getTwitterHandler(),
      card: 'summary_large_image',
      title: `${doc.data.title} | ${env.APP_NAME}`,
      description: doc.data.description,
    }}
  />

  <div>
    <div class="border-b border-border/40 sticky top-0 bg-background z-50 h-16">
      <Header className="h-full container">
        <div slot="extend-mobile-nav-list" class="mt-8 px-2">
          <DocsSidebar />
        </div>
      </Header>
    </div>

    <div class="container flex gap-6">
      <aside class="hidden md:block w-[220px] lg:w-[240px] sticky top-16 self-start">
        <ScrollArea className="h-[calc(100vh-4rem)]" client:idle>
          <div class="py-8">
            <DocsSidebar />
          </div>
        </ScrollArea>
      </aside>

      <main class="flex-1">
        <ScrollArea className="h-full" client:load>
          <div class="relative py-8">
            <div class="space-y-4">
              <h1 class="inline-block font-heading text-4xl lg:text-5xl">
                {doc.data.title}
              </h1>
              <p class="text-xl text-muted-foreground">{doc.data.description}</p>
            </div>
            <hr class="my-4" />

            <Content components={MdxComponents} />

            <hr class="my-4 md:my-6" />
            <DocsPager slug={doc.slug} />
          </div>
        </ScrollArea>
      </main>

      <div class="hidden xl:block w-[300px] self-start sticky top-16">
        <ScrollArea className="h-full" client:load>
          <div class="py-8">
            <TableOfContents toc={toc} client:load />
          </div>
        </ScrollArea>
      </div>
    </div>
  </div>

  <div class="border-t border-border/40">
    <Footer className="container" />
  </div>
</BaseLayout>
